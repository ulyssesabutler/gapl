Block,,Address,Description,Type,Bits,Endian Type,Access Mode,Valid for sub-modules,Default,"Constraints, Remarks",
INPUT_ARBITER,Init,NA,"When triggered, the module will perform SW reset",Global,0,Little,,INPUT_ARBITER,,,
INPUT_ARBITER,ID,0,"The ID of the module, to make sure that one accesses the right module",Reg,31:0,Little,RO,INPUT_ARBITER,32'h0000DA01,,
INPUT_ARBITER,Version,4,Version of the module,Reg,31:0,Little,RO,INPUT_ARBITER,32'h1,,
INPUT_ARBITER,Reset,8,Reset elemens of the module,Reg,15:0,Little,WOE,NF_10G_INTERFACE,16'h0,,
,ClearCounters,,"Asserting this bit, will clear all counters",Field,0,,WOE,nf_10g_interface,1'h0,,
,ResetRegisters,,"Asserting this bit, will reset (return to default value) all registers",Field,4,,WOE,nf_10g_interface,1'h0,,
,RFU,,"Reserved for future use, reset tables",Field,8,,WOE,nf_10g_interface,1'h0,,
,RFU,,"Reserved for future use, reset module",Field,12,,WOE,nf_10g_interface,1'h0,,
INPUT_ARBITER,Flip,C,The register returns the opposite value of what was written to it,Reg,31:0,Little,RWA,INPUT_ARBITER,32'h0,Returned value is at reset 32'hFFFFFFFF,
INPUT_ARBITER,Debug,10,"Debug Regiter, for simulation and debug purposes. Returns the value written to the register plus the default value.",Reg,31:0,Little,RWA,INPUT_ARBITER,32'h0,,
INPUT_ARBITER,PktIn,14,Incoming Packets Counter,Reg,31:0,Little,ROC,INPUT_ARBITER,32'h0,,
,PktIn,,Number of Incoming packets through the module,Field,30:0,,ROC,input_arbiter,31'h0,,
,PktInOvf,,Counter Overflow indication,Field,31,,ROC,input_arbiter,1'b0,,
INPUT_ARBITER,PktOut,18,Outgoing Packets Counter,Reg,31:0,Little,ROC,INPUT_ARBITER,32'h0,,
,PktrOut,,Number of Outgoing packets through the module,Field,30:0,,ROC,input_arbiter,31'h0,,
,PktOutOvf,,Counter Overflow indication,Field,31,,ROC,input_arbiter,1'b0,,
IP_NAME,IndirectAddress,1C,Address for indirect command,Reg,31:0,Little,RWSI,SUB_IP_NAME,32'h0,Do not modify this register,
,IndirectAddress,,Address for indirect command,Field,31:0,,RWSI,sub_ip_name,32'h0,,
IP_NAME,IndirectWrData,20, Data that will be written to IndirectAddress when an indirect write operation is triggered.,Reg,31:0,Little,RWSI,SUB_IP_NAME,32'h0,Do not modify this register,
,IndirectWrData,,Indirect write data.,Field,31:0,,RWSI,sub_ip_name,32'h0,,
IP_NAME,IndirectReply,24,Reply data from indirect read command,Reg,31:0,Little,ROI,SUB_IP_NAME,32'h0,Do not modify this register,
,IndirectReply,,Indirect read reply data,Field,31:0,,ROI,sub_ip_name,32'h0,,
IP_NAME,IndirectCommand,28,Indirect command to the indirect access memory,Reg,31:0,Little,RWI,SUB_IP_NAME,32'h0,Do not modify this register,
,IndirectTrigger,,Trigger the beginning of an indirect access by setting to '1'. A completion of an indirect operation is marked by the device setting this field to '0'.,Field,0,,RWI,sub_ip_name,1'b0,,
,IndirectType,,Type of indirect access: 0 - Write  1 - Read ,Field,4,,RWI,sub_ip_name,1'h0,,
,IndirectCommandStatus,,"Status of the last indirect command. If set to '1', then the last command failed on timeout. This field is valid only when IndirectTrigger is '0'.",Field,8,,RWI,sub_ip_name,1'b0,,
IP_NAME,IndirectConfig,2C,Indirect command to the indirect access memory,Reg,31:0,Little,RWSI,SUB_IP_NAME,32'h0,Do not modify this register,
,IndirectAddressIncrement,,"Address increment with every repeated access, as indicated in IndirectRepeatCount",Field,3:0,,RWSI,sub_ip_name,4'h1,,
,IndirectWriteType,,"Type of indirect write: 0 - wait states, 1- transfer acknowledge",Field,4,,RWSI,sub_ip_name,1'h0,"Wait states - IndirectTimeout will be waited for every write access (so use the minimal value needed). Transfer acknowledge - will wait on an external TA signal, and timeout on IndirectTimeout",
,IndirectTimeout,,Configures a timeout period for IndirectCommand (per single access). Resolution is in clocks.,Field,15:5,,RWSI,sub_ip_name,11'h0,,
,IndirectRepeatCount,,"Each write command is executed IndirectRepeatCount number of times.  Every time, the address is incremented by IndirectAddressIncrement. If set to 0 or 1, one operation is performed.",Field,31:16,,RWSI,sub_ip_name,16'h0,,
IP_NAME,Testmem,,Base address for Indirect access of memory Testmem,Mem,31:0,Little,9:0,SUB_IP_NAME,32'h0,"This base address will only appear as a defined constant, and can not be modified in runtime. Up to 16 memories are supported. Each memory within a IP_NAME must have a unique value. If valid, The memories list must appear at the end of the file, after ALL registers,",